"""
Solu√ß√£o para acessar planilhas do Google Sheets sem credenciais
Funciona com planilhas p√∫blicas ou que podem ser tornadas p√∫blicas
"""
import requests
import pandas as pd
from datetime import datetime
import json

class PublicSheetsService:
    def __init__(self):
        # ID da planilha
        self.spreadsheet_id = "1B0k2LbBkGCUu4lmR4P67xx7OjQ5HXbsr6JrLwEiRUIM"
        
    def make_public_and_access(self):
        """
        Instru√ß√µes para tornar a planilha p√∫blica e acess√°-la
        """
        print("üîì INSTRU√á√ïES PARA TORNAR A PLANILHA P√öBLICA:")
        print("=" * 60)
        print("1. Abra sua planilha no Google Sheets")
        print("2. Clique em 'Compartilhar' (canto superior direito)")
        print("3. Clique em 'Alterar para qualquer pessoa com o link'")
        print("4. Selecione 'Visualizador'")
        print("5. Clique em 'Conclu√≠do'")
        print("6. Execute novamente este script")
        print("=" * 60)
        
        return None
    
    def get_public_sheet_data(self):
        """
        Acessa planilha p√∫blica via CSV
        """
        try:
            # URL para exportar como CSV (funciona apenas com planilhas p√∫blicas)
            csv_url = f"https://docs.google.com/spreadsheets/d/{self.spreadsheet_id}/export?format=csv&gid=0"
            
            print(f"üîó Acessando: {csv_url}")
            
            # Headers para simular navegador
            headers = {
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
                'Accept': 'text/csv,text/plain,*/*',
                'Accept-Language': 'pt-BR,pt;q=0.9,en;q=0.8',
            }
            
            # Faz a requisi√ß√£o
            response = requests.get(csv_url, headers=headers, timeout=30)
            
            if response.status_code == 200:
                # L√™ o CSV
                from io import StringIO
                csv_data = StringIO(response.text)
                df = pd.read_csv(csv_data)
                
                if not df.empty:
                    print(f"‚úÖ Dados obtidos! {len(df)} registros")
                    df['ultima_atualizacao'] = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                    return df
                else:
                    print("‚ö†Ô∏è Planilha vazia")
                    return None
            else:
                print(f"‚ùå Erro HTTP: {response.status_code}")
                if response.status_code == 400:
                    print("üí° A planilha precisa ser p√∫blica para este m√©todo funcionar")
                return None
                
        except Exception as e:
            print(f"‚ùå Erro: {e}")
            return None
    
    def get_sheet_data_alternative(self):
        """
        M√©todo alternativo usando API p√∫blica do Google Sheets
        """
        try:
            # URL da planilha p√∫blica
            public_url = f"https://docs.google.com/spreadsheets/d/{self.spreadsheet_id}/edit"
            
            print(f"üîó Tentando m√©todo alternativo...")
            
            headers = {
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
            }
            
            response = requests.get(public_url, headers=headers, timeout=30)
            
            if response.status_code == 200:
                print("‚úÖ Planilha acess√≠vel!")
                # Aqui voc√™ poderia implementar parsing do HTML
                # Mas √© mais complexo, ent√£o vamos focar no m√©todo CSV
                return None
            else:
                print(f"‚ùå Erro HTTP: {response.status_code}")
                return None
                
        except Exception as e:
            print(f"‚ùå Erro: {e}")
            return None
    
    def get_latest_data(self):
        """
        Obt√©m dados usando o melhor m√©todo dispon√≠vel
        """
        print("üîÑ Buscando dados da planilha...")
        
        # Tenta primeiro o m√©todo CSV (mais confi√°vel)
        df = self.get_public_sheet_data()
        if df is not None:
            return df
        
        # Se n√£o funcionar, mostra instru√ß√µes
        print("\n" + "="*60)
        print("‚ùå N√ÉO FOI POSS√çVEL ACESSAR A PLANILHA")
        print("="*60)
        self.make_public_and_access()
        return None

# Inst√¢ncia global
public_sheets_service = PublicSheetsService()
